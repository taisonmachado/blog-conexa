<?php

/**
 * This is the model base class for the table "usuario".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Usuario".
 *
 * Columns in table "usuario" available as properties of the model,
 * followed by relations of table "usuario" available as properties of the model.
 *
 * @property integer $usuario_id
 * @property string $email
 * @property string $senha
 * @property string $nome
 * @property string $telefone
 * @property string $data_nascimento
 * @property string $cadastrado
 * @property string $atualizado
 *
 * @property Comentario[] $comentarios
 * @property Post[] $posts
 */
abstract class BaseUsuario extends GxActiveRecord {

	private $_identity;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'usuario';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Usuario|Usuarios', $n);
	}

	public static function representingColumn() {
		return 'email';
	}

	public function rules() {
		return array(
			array('email, senha, nome', 'length', 'max'=>100),
			array('email, senha, nome', 'required', 'on' => 'cadastro'),
			array('email, senha', 'required', 'on' => 'login'),
			array('email', 'email'),
			array('email', 'unique', 'on'=>'cadastro'),
			// array('data_nascimento', 'type', 'type'=>'date'),
			array('telefone', 'length', 'max'=>20),
			array('data_nascimento, cadastrado, atualizado', 'safe'),
			array('telefone, data_nascimento, cadastrado, atualizado', 'default', 'setOnEmpty' => true, 'value' => null),
			array('usuario_id, email, senha, nome, telefone, data_nascimento, cadastrado, atualizado', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'comentarios' => array(self::HAS_MANY, 'Comentario', 'usuario_id'),
			'posts' => array(self::HAS_MANY, 'Post', 'usuario_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'usuario_id' => Yii::t('app', 'Usuario'),
			'email' => Yii::t('app', 'Email'),
			'senha' => Yii::t('app', 'Senha'),
			'nome' => Yii::t('app', 'Nome'),
			'telefone' => Yii::t('app', 'Telefone'),
			'data_nascimento' => Yii::t('app', 'Data Nascimento'),
			'cadastrado' => Yii::t('app', 'Cadastrado'),
			'atualizado' => Yii::t('app', 'Atualizado'),
			'comentarios' => null,
			'posts' => null,
		);
	}

	public function validaSenha($password)
    {
        return CPasswordHelper::verifyPassword($password,$this->senha);
    }
 
    public function hashSenha($password)
    {
        return CPasswordHelper::hashPassword($password);
    }

	public function authenticate()
	{
		if(!$this->hasErrors()){
			$this->_identity = new UserIdentity($this->email, $this->senha);
			if(!$this->_identity->authenticate())
				$this->addError('senha','Senha incorreta');
		}
	}

	/**
	 * Logs in the user using the given username and password in the model.
	 * @return boolean whether login is successful
	 */
	public function login()
	{
		if($this->_identity===null)
		{
			$this->_identity=new UserIdentity($this->email,$this->senha);
			$this->_identity->authenticate();
		}
		if($this->_identity->errorCode===UserIdentity::ERROR_NONE)
		{
			// $duration=$this->rememberMe ? 3600*24*30 : 0; // 30 days
			// Yii::app()->user->login($this->_identity,$duration);
			Yii::app()->user->login($this->_identity);
			return true;
		}
		else
			return false;
	}
}